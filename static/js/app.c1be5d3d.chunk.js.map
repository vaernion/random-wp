{"version":3,"sources":["src/languages.js","src/styles.js","App.js","src/index.js","web-build/register-service-worker.js"],"names":["langs","code","name","wp","styles","StyleSheet","create","controls","flexDirection","justifyContent","alignItems","marginTop","marginBottom","dummyContainer","width","refreshButton","langPicker","pageContainer","flex","pageContent","alignSelf","padding","backgroundColor","title","fontWeight","fontSize","thumbnail","margin","sourceLink","sourceLinkText","color","Index","React","useState","lang","setLang","wikipediaLocalized","setWikipediaLocalized","pageJson","setPageJson","useEffect","handleRefresh","fetchWiki","fetch","then","response","json","console","log","find","e","catch","error","View","style","onPress","type","size","Picker","selectedValue","onValueChange","langCode","handleLang","map","Item","key","label","value","contentContainerStyle","Text","description","Image","height","source","uri","extract","WebBrowser","content_urls","mobile","page","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.c1be5d3d.chunk.js","sourcesContent":["export const langs = [\n  { code: \"en\", name: \"English\", wp: \"Wikipedia\" },\n  { code: \"de\", name: \"Deutsch\", wp: \"Wikipedia\" },\n  { code: \"fr\", name: \"Français\", wp: \"Wikipédia\" },\n  { code: \"ru\", name: \"Русский\", wp: \"Википедия\" },\n  { code: \"it\", name: \"Italiano\", wp: \"Wikipedia\" },\n  { code: \"es\", name: \"Español\", wp: \"Wikipedia\" },\n  { code: \"pl\", name: \"Polski\", wp: \"Wikipedia\" },\n  { code: \"ja\", name: \"日本語\", wp: \"ウィキペディア\" },\n  { code: \"zh\", name: \"中文\", wp: \"维基百科\" },\n  { code: \"pt\", name: \"Português\", wp: \"Wikipédia\" },\n  { code: \"no\", name: \"Norsk bokmål\", wp: \"Wikipedia\" },\n  { code: \"nn\", name: \"Norsk nynorsk\", wp: \"Wikipedia\" },\n  { code: \"ar\", name: \"العربية\", wp: \"ويكيبيديا\" },\n  { code: \"nl\", name: \"Nederlands\", wp: \"Wikipedia\" },\n  { code: \"ceb\", name: \"Sinugboanong Binisaya\", wp: \"Wikipedya\" },\n  { code: \"sv\", name: \"Svenska\", wp: \"Wikipedia\" },\n  { code: \"vi\", name: \"Tiếng Việt\", wp: \"Wikipedia\" },\n  { code: \"war\", name: \"Winaray\", wp: \"Wikipedia\" },\n];\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  controls: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 40,\n    marginBottom: 10,\n  },\n  dummyContainer: {\n    width: 120,\n  },\n  refreshButton: {\n    width: 50,\n  },\n  langPicker: {\n    width: 120,\n  },\n  pageContainer: {\n    flex: 1,\n    marginBottom: 20,\n  },\n  pageContent: {\n    width: \"90%\",\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    backgroundColor: \"#F5FCFF\",\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 20,\n  },\n  thumbnail: {\n    margin: 15,\n  },\n  sourceLink: {\n    marginTop: 10,\n  },\n  sourceLinkText: {\n    color: \"blue\",\n  },\n});\n","import { Index } from \"./src\";\n\nexport default Index;\n","import * as WebBrowser from \"expo-web-browser\";\nimport React from \"react\";\nimport { Image, Picker, Text, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { langs } from \"./languages\";\nimport { styles } from \"./styles\";\n\nexport function Index() {\n  const [lang, setLang] = React.useState(\"en\");\n  const [wikipediaLocalized, setWikipediaLocalized] = React.useState(null);\n  const [pageJson, setPageJson] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!lang) {\n      setLang(\"en\");\n      return;\n    }\n    handleRefresh();\n  }, [lang]);\n\n  const handleLang = (langCode) => {\n    setLang(langCode);\n  };\n\n  const handleRefresh = () => {\n    fetchWiki(lang);\n  };\n\n  const fetchWiki = (lang) => {\n    const url = `https://${lang}.wikipedia.org/api/rest_v1/page/random/summary`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setPageJson(json);\n        // hack to stall wp link label when changing language, at the cost of one render\n        setWikipediaLocalized(langs.find((e) => e.code === lang).wp);\n      })\n      .catch((error) => {\n        console.log(\"fetch error: \", error);\n      });\n  };\n\n  const handleSourceLink = () => {\n    WebBrowser.openBrowserAsync(pageJson.content_urls.mobile.page);\n  };\n\n  return (\n    <>\n      <View style={styles.controls}>\n        <View style={styles.dummyContainer}></View>\n        <TouchableOpacity style={styles.refreshButton} onPress={handleRefresh}>\n          <Icon name=\"redo\" type=\"font-awesome-5\" size={35} />\n        </TouchableOpacity>\n        <Picker\n          style={styles.langPicker}\n          selectedValue={lang}\n          onValueChange={(langCode) => handleLang(langCode)}\n        >\n          {langs.map((e) => (\n            <Picker.Item key={e.code} label={e.name} value={e.code} />\n          ))}\n        </Picker>\n      </View>\n\n      {pageJson ? (\n        <>\n          <ScrollView\n            style={styles.pageContainer}\n            contentContainerStyle={styles.pageContent}\n          >\n            <Text style={styles.title}>{pageJson.title}</Text>\n            <Text>{pageJson.description ? pageJson.description : null}</Text>\n            {pageJson.thumbnail ? (\n              <Image\n                style={[\n                  styles.thumbnail,\n                  {\n                    height: pageJson.thumbnail.height,\n                    width: pageJson.thumbnail.width,\n                  },\n                ]}\n                source={{ uri: pageJson.thumbnail.source }}\n              ></Image>\n            ) : null}\n            <Text>{pageJson.extract}</Text>\n            <TouchableOpacity\n              style={styles.sourceLink}\n              onPress={handleSourceLink}\n            >\n              <Text style={styles.sourceLinkText}>\n                {wikipediaLocalized}: {pageJson.title}\n              </Text>\n            </TouchableOpacity>\n          </ScrollView>\n        </>\n      ) : null}\n    </>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}